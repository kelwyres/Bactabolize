manifest {
  description = 'Metabolic pipeline'
  author = 'Stephen Watts'
  homePage = 'https://github.com/scwatts/metabolic'
  nextflowVersion = '>=20.01.0'
}

params {
  // Input and output
  assembly_fps = 'data/isolates/K_p*.fasta'
  ref_genbank_fp = 'data/reference/K_pneumoniae_MGH78578.gbk'
  ref_model_fp = 'data/reference/iYL1228.json'
  prodigal_model_fp = 'data/misc/klebsiella_pneumoniae_GCA_006364295.1_ASM636429v1.fasta_model.bin'
  output_dir = 'output/'
  run_info_dir = "${output_dir}/run_info/"

  // Option stages
  assembly_qc = true
  reannotation = true
  model_fba = true

  // Executor options
  // Maximum jobs to submit to the SLURM queue at once
  queue_size = 100
  // Number of processors to use for local execution
  processors = 4

  // Misc
  force = false
  help = false
}

profiles {
  standard {
    process {
      executor = 'local'
    }
  }

  massive {
    process {
      executor = 'slurm'

      // Retry jobs - typically with more resources
      errorStrategy = 'retry'
      maxRetries = 3

      // Required for consistent resumes on massives NFS
      cache = 'lenient'

      // Default job resources
      cpus = 1
      memory = { 2.GB * task.attempt }
      time = { 30.minutes * task.attempt }

      // Set options absent from nf slurm api
      clusterOptions = {
        account = 'js66'
        qos = task.time <= 30.minutes ? 'shortq' : 'normal'
        partition = task.time <= 30.minutes ? 'short,comp' : 'comp'
        return "--account=${account} --qos=${qos} --partition=${partition}"
      }
    }
  }
}

dag {
  enabled = true
  file = "${params.run_info_dir}/nextflow/dag.svg"
}

report {
  enabled = true
  file = "${params.run_info_dir}/nextflow/report.html"
}

timeline {
  enabled = true
  file = "${params.run_info_dir}/nextflow/timeline.html"
}

trace {
  enabled = true
  file = "${params.run_info_dir}/nextflow/trace.txt"
}

// SLURM options
// Replace 'nf' in SLURM job name with 'mb'
// For whatever reason I can't access task.processor.name here so instead we do
// a string sub to achieve desired result
executor.$slurm.jobName = { "mb-${task.name}".replace(' ', '_') }
// Limit queue size (100 is default)
executor.$slurm.queueSize = params.queue_size

// Local executor options
executor.$local.queueSize = params.processors
